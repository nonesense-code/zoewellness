<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Product List</title>
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css"
    />
    <script>
      let cart = {};
      let cartCount = 0;

      window.onload = function () {
        const storedCart = localStorage.getItem("cart");
        if (storedCart) {
          cart = JSON.parse(storedCart);
          cartCount = Object.keys(cart).length;
          updateCartCounter();
        }
      };

      function addToCart(product, itemId) {
        const quantityInput = document.getElementById(`quantity-${itemId}`);
        const quantity = parseInt(quantityInput.value) || 1;

        if (!cart[itemId]) {
          cart[itemId] = { name: product, count: quantity };
          cartCount++;
        } else {
          cart[itemId].count += quantity;
        }

        updateCartCounter();
        saveCartToLocalStorage();
        quantityInput.value = 1;
      }

      function updateCartCounter() {
        document.getElementById("cart-count").innerText = cartCount;
      }

      function updateQuantity(itemId, newQuantity) {
        if (cart[itemId]) {
          cart[itemId].count = newQuantity > 0 ? newQuantity : 1;
          saveCartToLocalStorage();
          openCartModal();
        }
      }

      function removeFromCart(itemId) {
        if (cart[itemId]) {
          delete cart[itemId];
          cartCount--;
          updateCartCounter();
          saveCartToLocalStorage();
          openCartModal();
        }
      }

      function saveCartToLocalStorage() {
        localStorage.setItem("cart", JSON.stringify(cart));
      }

      function openCartModal() {
        const modal = document.getElementById("cart-modal");
        const cartItemsList = document.getElementById("cart-items");
        cartItemsList.innerHTML = "";

        if (cartCount === 0) {
          cartItemsList.innerHTML = "<li>No items in the cart.</li>";
        } else {
          for (const [itemId, item] of Object.entries(cart)) {
            cartItemsList.innerHTML += `
            <li class="py-1 flex justify-between items-center">
              ${item.name}
              <input type="number" min="1" value="${item.count}"
                onchange="updateQuantity('${itemId}', this.value)"
                class="w-12 text-center border rounded mx-2" />
              <button onclick="removeFromCart('${itemId}')"
                class="bg-red-500 text-white ml-4 px-2 rounded-md">Remove</button>
            </li>`;
          }
        }
        modal.classList.remove("hidden");
      }

      function closeCartModal() {
        document.getElementById("cart-modal").classList.add("hidden");
      }

      function checkout() {
        const cartDetails = Object.entries(cart).map(([itemId, item]) => ({
          id: itemId,
          count: item.count,
        }));

        const queryString = cartDetails
          .map((item) => `${item.id}=${item.count}`)
          .join("&");

        window.location.href = `/orders/id?${queryString}`;
      }

      function deleteProduct(productId) {
        if (confirm("Are you sure you want to delete this product?")) {
          fetch(`/delete-product/${productId}`, {
            method: "post",
          })
            .then((response) => {
              if (response.ok) {
                document.getElementById(`item-${productId}`).remove();
                alert("Product deleted successfully!");
              } else {
                alert("Error deleting product");
              }
            })
            .catch((error) => {
              console.error("Error:", error);
              alert("Error deleting product");
            });
        }
      }

      function toggleEdit(itemId) {
        const editRow = document.getElementById(`edit-row-${itemId}`);
        const saveButton = document.getElementById(`save-button-${itemId}`);
        const editButton = document.getElementById(`edit-button-${itemId}`);

        editRow.classList.toggle("hidden");
        saveButton.classList.toggle("hidden");
        editButton.classList.toggle("hidden");
      }

      function saveEdit(itemId) {
        const updatedName = document.getElementById(
          `edit-name-${itemId}`
        ).value;
        const updatedVolume = document.getElementById(
          `edit-volume-${itemId}`
        ).value;
        const updatedRate = document.getElementById(
          `edit-rate-${itemId}`
        ).value;
        const updatedPV = document.getElementById(`edit-pv-${itemId}`).value;
        const updatedBV = document.getElementById(`edit-bv-${itemId}`).value;

        fetch(`/edit-product/${itemId}`, {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            name: updatedName,
            volume: updatedVolume,
            rate: updatedRate,
            pv: updatedPV,
            bv: updatedBV,
          }),
        })
          .then((response) => {
            if (response.ok) {
              alert("Product updated successfully!");
              location.reload();
            } else {
              alert("Error updating product");
            }
          })
          .catch((error) => {
            console.error("Error:", error);
            alert("Error updating product");
          });
      }

      async function fetchSuggestions() {
        const input = document.getElementById("search-input").value;

        if (input) {
          try {
            const response = await fetch(`/search/item/name?query=${input}`);
            if (!response.ok) throw new Error("Network response was not ok");
            const suggestions = await response.json();

            renderSuggestions(suggestions);
          } catch (error) {
            console.error("Error fetching suggestions:", error);
          }
        } else {
          document.getElementById("suggestions").classList.add("hidden");
        }
      }

      function renderSuggestions(suggestions) {
        const suggestionsList = document.getElementById("suggestions-list");
        suggestionsList.innerHTML = "";

        suggestions.forEach((suggestion) => {
          const suggestionItem = document.createElement("li");
          suggestionItem.textContent = suggestion.name;
          suggestionItem.className = "cursor-pointer hover:bg-gray-300 p-2";

          suggestionItem.onclick = function () {
            document.getElementById("search-input").value = suggestion.name;
            document.getElementById("search-input").focus();
            document.getElementById("suggestions").classList.add("hidden");
          };
          suggestionsList.appendChild(suggestionItem);
        });

        if (suggestions.length > 0) {
          document.getElementById("suggestions").classList.remove("hidden");
        } else {
          document.getElementById("suggestions").classList.add("hidden");
        }
      }

      function toggleMobileMenu() {
        const menu = document.getElementById("mobile-menu");
        menu.classList.toggle("translate-x-full");
      }
    </script>
  </head>

  <body>
    <nav
      class="bg-white shadow-lg fixed w-full top-0 z-20 flex items-center justify-between px-6 py-3"
    >
      <div
        class="flex justify-between gap-4 items-center w-full max-w-6xl mx-auto"
      >
        <a href="/" class="text-2xl font-extrabold text-indigo-600">ZOE</a>
        <div>
          <div class="hidden md:flex items-center space-x-6">
            <a
              href="/"
              class="block text-center px-3 py-1 text-gray-600 border border-gray-600 rounded hover:text-white hover:bg-gray-600 transition-colors duration-150"
              >Home</a
            >
            <% if (cookieExist) { %>
            <div class="space-y-2 sm:space-y-0 sm:flex sm:space-x-4">
              <a
                href="/addproducts"
                class="block text-center px-3 py-1 text-indigo-600 border border-indigo-600 rounded hover:bg-indigo-600 hover:text-white transition-colors duration-150"
                >Add Products</a
              >
              <a
                href="/users/register"
                class="block text-center px-3 py-1 text-green-600 border border-green-600 rounded hover:bg-green-600 hover:text-white transition-colors duration-150 whitespace-nowrap tracking-tighter"
                >Register</a
              >
              <a
                href="/users/login"
                class="block text-center px-3 py-1 text-blue-600 border border-blue-600 rounded hover:bg-blue-600 hover:text-white transition-colors duration-150 whitespace-nowrap tracking-tighter"
                >Login</a
              >
              <a
                href="/users/logout"
                class="block text-center px-3 py-1 text-red-600 border border-red-600 rounded hover:bg-red-600 hover:text-white transition-colors duration-150 whitespace-nowrap tracking-tighter"
                >Logout</a
              >
              <a
                href="/authorizedparty/logout"
                class="block text-center px-3 py-1 text-purple-600 border border-purple-600 rounded hover:bg-purple-600 hover:text-white transition-colors duration-150 whitespace-nowrap tracking-tighter"
                >Switch to User</a
              >
            </div>

            <% } %>
            <div
              class="text-gray-700 text-lg font-semibold hover:text-indigo-600 cursor-pointer"
              onclick="openCartModal()"
            >
              Cart (<span id="cart-count">0</span>)
            </div>
          </div>
      
        </div>

          <div class="hidden lg:flex items-center">
            <form action="/search/item" method="post" class="relative">
              <input
                type="text"
                id="search-input"
                name="search_items"
                placeholder="Search..."
                class="w-72 h-10 border border-gray-300 rounded-full pl-4 pr-10 text-gray-700 focus:outline-none focus:ring-2 focus:ring-indigo-400"
                required
                oninput="fetchSuggestions()"
              />
              <button
                type="submit"
                class="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-500 hover:text-indigo-600"
              >
                <i class="fa-solid fa-magnifying-glass"></i>
              </button>
              <!-- Suggestions dropdown -->
              <div
                id="suggestions"
                class="absolute top-12 w-full bg-white rounded-lg shadow-lg overflow-y-auto max-h-40 hidden"
              >
                <ul id="suggestions-list" class="space-y-2 py-2 px-4"></ul>
              </div>
            </form>
          </div>

        <div class="md:hidden flex items-center">
          <button
            onclick="toggleMobileMenu()"
            class="text-indigo-600 text-2xl focus:outline-none"
          >
            <i class="fa-solid fa-bars"></i>
          </button>
        </div>
      <div
        id="mobile-menu"
        class="fixed top-0 left-0 w-full h-full bg-white transform translate-x-full transition-transform duration-300 md:hidden z-30"
      >
        <div class="flex items-center justify-between p-4">
          <a href="/" class="text-2xl font-extrabold text-indigo-600">ZOE</a>
          <button
            onclick="toggleMobileMenu()"
            class="text-indigo-600 text-2xl focus:outline-none"
          >
            <i class="fa-solid fa-times"></i>
          </button>
        </div>
        <div
          class="flex flex-col items-center space-y-6 mt-10 text-lg font-semibold text-gray-700"
        >
          <a href="/" class="hover:text-indigo-600 transition">Home</a>

          <% if (cookieExist) { %>
          <a
            href="/addproducts"
            class="px-5 py-2 bg-gradient-to-r from-purple-600 to-pink-500 text-white font-semibold rounded-full shadow-md hover:shadow-lg transition-transform duration-300 transform hover:scale-105 active:scale-95"
            >Add Products</a
          >
          <a
            href="/users/register"
            class="px-5 py-2 bg-green-500 text-white font-semibold rounded-lg shadow-md hover:bg-green-600 transition-transform duration-300 transform hover:scale-105 active:scale-95"
            >Register</a
          >
          <a
            href="/users/login"
            class="px-5 py-2 bg-blue-500 text-white font-semibold rounded-lg shadow-md hover:bg-blue-600 transition-transform duration-300 transform hover:scale-105 active:scale-95"
            >Login</a
          >
          <a
            href="/users/logout"
            class="px-5 py-2 bg-red-500 text-white font-semibold rounded-lg shadow-md hover:bg-red-600 transition-transform duration-300 transform hover:scale-105 active:scale-95"
            >Logout</a
          >
          <a
            href="/authorizedparty/logout"
            class="px-5 py-2 bg-purple-500 text-white font-semibold rounded-lg shadow-md hover:bg-purple-600 transition-transform duration-300 transform hover:scale-105 active:scale-95"
            >Switch to User</a
          >
          <% } %>

          <div
            class="hover:text-indigo-600 cursor-pointer"
            onclick="openCartModal()"
          >
            Cart (<span id="cart-count">0</span>)
          </div>

          <form
            action="/search/item"
            method="post"
            class="w-full flex justify-center mt-4"
          >
            <div class="relative w-3/4">
              <input
                type="text"
                id="search-input"
                name="search_items"
                placeholder="Search..."
                class="w-full h-10 border border-gray-300 rounded-full pl-4 pr-10 text-gray-700 focus:outline-none focus:ring-2 focus:ring-indigo-400"
                required
                oninput="fetchSuggestions()"
              />
              <button
                type="submit"
                class="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-500 hover:text-indigo-600"
              >
                <i class="fa-solid fa-magnifying-glass"></i>
              </button>
            </div>
          </form>
        </div>
      </div>
    </nav>

    <div class="mt-16">
      <div class="container mx-auto p-4">
        <h1 class="text-2xl font-bold text-center mb-4">Product List</h1>

        <table
          id="product-table"
          class="table-auto w-full bg-white shadow-md rounded-lg overflow-hidden"
        >
          <thead>
            <tr
              class="bg-gray-200 text-gray-600 uppercase text-xs leading-normal"
            >
              <th class="py-3 px-2 text-left">S.N</th>
              <th class="py-3 px-2 text-left">Name</th>
              <th class="py-3 px-2 text-left">Volume</th>
              <th class="py-3 px-2 text-left">Rate</th>
              <th class="py-3 px-2 text-left">PV</th>
              <th class="py-3 px-2 text-left">BV</th>
              <% if (cookieExist) { %>
              <th class="py-3 px-2 text-left">Actions</th>
              <% } %>
              <th class="py-3 px-2 text-left">Quantity</th>
              <th class="py-3 px-2 text-left">Add to Cart</th>
            </tr>
          </thead>
          <tbody>
            <% items.forEach((item, index) => { %>
            <tr
              id="item-<%= item._id %>"
              class="border-b border-gray-200 bg-gray-50 hover:bg-gray-100"
            >
              <td class="py-3 px-2"><%= index + 1 %></td>
              <td class="py-3 px-2"><%= item.name %></td>
              <td class="py-3 px-2"><%= item.volume %></td>
              <td class="py-3 px-2"><%= item.rate %></td>
              <td class="py-3 px-2"><%= item.pv %></td>
              <td class="py-3 px-2"><%= item.bv %></td>
              <% if (cookieExist) { %>
              <td class="py-3 px-2 flex gap-2">
                <button
                  id="edit-button-<%= item._id %>"
                  onclick="toggleEdit('<%= item._id %>')"
                  class="bg-blue-500 text-white py-1 px-3 rounded-md"
                >
                  Edit
                </button>
                <button
                  onclick="deleteProduct('<%= item._id %>')"
                  class="bg-red-500 text-white py-1 px-3 rounded-md"
                >
                  Delete
                </button>
                <button
                  id="save-button-<%= item._id %>"
                  onclick="saveEdit('<%= item._id %>')"
                  class="bg-green-500 text-white py-1 px-3 rounded-md hidden"
                >
                  Save
                </button>
              </td>
              <% } %>
              <td class="py-3 px-2">
                <input
                  id="quantity-<%= item._id %>"
                  type="number"
                  min="1"
                  value="1"
                  class="border w-16 rounded-lg p-1 text-center"
                />
              </td>
              <td class="py-3 px-2">
                <button
                  onclick="addToCart('<%= item.name %>', '<%= item._id %>')"
                  class="bg-blue-500 text-white py-1 px-3 rounded-md"
                >
                  Add
                </button>
              </td>
            </tr>
            <tr id="edit-row-<%= item._id %>" class="hidden">
              <td></td>
              <td>
                <input
                  id="edit-name-<%= item._id %>"
                  type="text"
                  value="<%= item.name %>"
                  class="border w-full p-1 rounded-md"
                />
              </td>
              <td>
                <input
                  id="edit-volume-<%= item._id %>"
                  type="text"
                  value="<%= item.volume %>"
                  class="border w-full p-1 rounded-md"
                />
              </td>
              <td>
                <input
                  id="edit-rate-<%= item._id %>"
                  type="text"
                  value="<%= item.rate %>"
                  class="border w-full p-1 rounded-md"
                />
              </td>
              <td>
                <input
                  id="edit-pv-<%= item._id %>"
                  type="text"
                  value="<%= item.pv %>"
                  class="border w-full p-1 rounded-md"
                />
              </td>
              <td>
                <input
                  id="edit-bv-<%= item._id %>"
                  type="text"
                  value="<%= item.bv %>"
                  class="border w-full p-1 rounded-md"
                />
              </td>
            </tr>
            <% }); %>
          </tbody>
        </table>
      </div>

      <div
        id="cart-modal"
        class="fixed inset-0 bg-black bg-opacity-50 hidden flex justify-center items-center"
      >
        <div class="bg-white p-6 rounded-lg w-1/2">
          <h2 class="text-lg font-bold mb-4">Your Cart</h2>
          <ul id="cart-items" class="mb-4"></ul>
          <div class="flex justify-between">
            <button
              onclick="checkout()"
              class="bg-green-500 text-white py-2 px-4 rounded-md"
            >
              Checkout
            </button>
            <button
              onclick="closeCartModal()"
              class="bg-red-500 text-white py-2 px-4 rounded-md"
            >
              Close
            </button>
          </div>
        </div>
      </div>
    </div>
  </body>
  <link
    rel="stylesheet"
    href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css"
    integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg=="
    crossorigin="anonymous"
    referrerpolicy="no-referrer"
  />
</html>
